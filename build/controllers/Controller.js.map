{"version":3,"sources":["../../src/controllers/Controller.js"],"names":["Controller","app","classe","modelo","includesConsulta","session","req","res","resultados","run","records","forEach","record","json","_fields","properties","id","identity","low","push","status","HttpStatus","OK","UNPROCESSABLE_ENTITY","error","message","resultado","params","query","dados","body","queryBaseCreate","queryCreate","propeties","CREATED","send","queryBaseUpdate","queryUpdate","queryBaseDelete","queryDelete","NO_CONTENT"],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\r\nimport HttpStatus from 'http-status'\r\n\r\nclass Controller {\r\n  constructor (app) {\r\n    this.classe = ''\r\n    this.modelo = {}\r\n    this.includesConsulta = []\r\n    this.session = app.session\r\n  }\r\n\r\n  async getAll (req, res) {\r\n    try {\r\n      const resultados = []\r\n      const { records } = await this.session.run(`MATCH (n:${this.classe}) RETURN n`)\r\n\r\n      records.forEach(record => {\r\n        const modelo = new this.modelo()\r\n        modelo.json = { ...record._fields[0].properties, id: record._fields[0].identity.low }\r\n        resultados.push(modelo.json)\r\n      })\r\n\r\n      return res.status(HttpStatus.OK).json(resultados)\r\n    } catch (error) {\r\n      return res.status(HttpStatus.UNPROCESSABLE_ENTITY).json({ error: true, message: error.message })\r\n    }\r\n  }\r\n\r\n  async findOne (req, res) {\r\n    try {\r\n      let resultado = {}\r\n      const id = req.params.id\r\n      const query = `\r\n        MATCH (n:${this.classe})\r\n        WHERE ID(n) = ${id}\r\n        RETURN n\r\n      `\r\n      const { records } = await this.session.run(query)\r\n      records.forEach(record => {\r\n        const modelo = new this.modelo()\r\n        modelo.json = { ...record._fields[0].properties, id: record._fields[0].identity.low }\r\n        resultado = modelo.json\r\n      })\r\n\r\n      return res.status(HttpStatus.OK).json(resultado)\r\n    } catch (error) {\r\n      return res.status(HttpStatus.UNPROCESSABLE_ENTITY).json({ error: true, message: error.message })\r\n    }\r\n  }\r\n\r\n  async create (req, res) {\r\n    try {\r\n      const dados = new this.modelo()\r\n      dados.json = req.body\r\n\r\n      const queryBaseCreate = `\r\n        CREATE (n:${this.classe} $propeties)\r\n      `\r\n\r\n      await this.session.run(this.queryCreate() || queryBaseCreate, { propeties: dados.json })\r\n\r\n      return res.status(HttpStatus.CREATED).send()\r\n    } catch (error) {\r\n      return res.status(HttpStatus.UNPROCESSABLE_ENTITY).json({ error: true, message: error.message })\r\n    }\r\n  }\r\n\r\n  async update (req, res) {\r\n    try {\r\n      const id = req.params.id\r\n      const dados = new this.modelo()\r\n      dados.json = req.body\r\n\r\n      const queryBaseUpdate = `\r\n        MATCH (n:${this.classe})\r\n        WHERE ID(n) = ${id}\r\n        SET n += $propeties\r\n      `\r\n      await this.session.run(this.queryUpdate() || queryBaseUpdate, { propeties: dados.json })\r\n\r\n      return res.status(HttpStatus.OK).send()\r\n    } catch (error) {\r\n      return res.status(HttpStatus.UNPROCESSABLE_ENTITY).json({ error: true, message: error.message })\r\n    }\r\n  }\r\n\r\n  async delete (req, res) {\r\n    try {\r\n      const id = req.params.id\r\n\r\n      const queryBaseDelete = `\r\n        MATCH (n:${this.classe})\r\n        WHERE ID(n) = ${id}\r\n        DETACH DELETE n\r\n      `\r\n      await this.session.run(this.queryDelete() || queryBaseDelete)\r\n\r\n      return res.status(HttpStatus.NO_CONTENT).send()\r\n    } catch (error) {\r\n      return res.status(HttpStatus.UNPROCESSABLE_ENTITY).json({ error: true, message: error.message })\r\n    }\r\n  }\r\n\r\n  // Método reutilizáveis\r\n\r\n  queryCreate () {\r\n    return null\r\n  }\r\n\r\n  queryUpdate () {\r\n    return null\r\n  }\r\n\r\n  queryDelete () {\r\n    return null\r\n  }\r\n}\r\n\r\nexport { Controller }\r\n"],"file":"Controller.js"}